import aiohttp
from aiogram import types
from aiogram.dispatcher.filters import CommandHelp, Command
from aiogram.types import CallbackQuery

import config
from keyboards import cite_keyboard, cities_keyboard, callback
from loader import dp, db
from utils.emoji import translate


@dp.message_handler(CommandHelp())
async def command_help(message: types.Message):
    text = ("<pre>–¢—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–ª—è—Ç—å –∏ —É–¥–∞–ª—è—Ç—å –≤ —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–∞,",
            "–∫–æ—Ç–æ—Ä—ã–µ —Ç—ã —Ö–æ—á–µ—à—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å",
            "–¢–∞–∫–∂–µ —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–µ—Ç–∏—Ç—å –º–æ–π —Å–∞–π—Ç</pre>",
            "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ",
            "/start - –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥",
            "/help - –ü–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É",
            "/cities - –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –≥–æ—Ä–æ–¥–∞",
            "/add + <i>'–Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞'</i> - –¥–æ–±–∞–≤–∏—Ç—å –≥–æ—Ä–æ–¥ –≤ —Å–ø–∏—Å–æ–∫",
            "/delete + <i>'–Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞'</i> - —É–¥–∞–ª–∏—Ç—å –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞")
    await message.answer('\n'.join(text), reply_markup=cite_keyboard)


@dp.message_handler(Command('add'))
async def command_add(message: types.Message):
    count = await db.limit_3_cities(message.from_user.id)
    if count >= 3:
        text = '‚õî\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –º–µ–Ω—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ üòî\n' \
               '–í —Ç–≤–æ–µ–º —Å–ø–∏—Å–∫–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 3-—Ö –≥–æ—Ä–æ–¥–æ–≤ ‚ò∫\n' \
               '-------------------------\n' \
               '–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å –ª–∏—à–Ω–∏–π –≥–æ—Ä–æ–¥ - –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π üëá\n' \
               '/delete <i>–Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞</i>'
        return await message.reply(text)

    try:
        city = message.text.split()[1:]
    except IndexError:
        return await message.reply('<i>–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –≥–æ—Ä–æ–¥ –ø–æ–ø—Ä–æ–±—É–π —Ç–∞–∫:\n'
                                   '/add –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞</i>')

    if await db.add_city(city=city, telegram_id=message.from_user.id):
        return await message.reply('‚õî –≠—Ç–æ—Ç –≥–æ—Ä–æ–¥ —É–∂–µ –µ—Å—Ç—å –≤ —Ç–≤–æ–µ–º —Å–ø–∏—Å–∫–µ ‚õî')

    await message.reply(f'–ì–æ—Ä–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω! –û—Å—Ç–∞–ª–æ—Å—å —Å–≤–æ–±–æ–¥–Ω—ã—Ö —è—á–µ–µ–∫: {2 - int(count)}')


@dp.message_handler(Command('delete'))
async def command_delete(message: types.Message):
    try:
        city = message.text.split()[1:]
    except IndexError:
        await message.reply('<i>–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –≥–æ—Ä–æ–¥ –ø–æ–ø—Ä–æ–±—É–π —Ç–∞–∫:\n'
                            '/delete –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞</i>')
        return

    city = ' '.join(city).title()
    user_cities = await db.select_users_city(telegram_id=message.from_user.id)

    if not city in user_cities:
        return await message.reply('‚õî –≠—Ç–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ—Ç –≤ —Ç–≤–æ–µ–º —Å–ø–∏—Å–∫–µ ‚õî\n'
                                   '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–≤–æ–∏—Ö –≥–æ—Ä–æ–¥–æ–≤ üëâ /cities')
    await db.delete_city(city)

    count = await db.limit_3_cities(message.from_user.id)
    await message.reply(f'–ì–æ—Ä–æ–¥ –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞! –û—Å—Ç–∞–ª–æ—Å—å —Å–≤–æ–±–æ–¥–Ω—ã—Ö —è—á–µ–µ–∫: {3 - int(count)}')


@dp.message_handler(Command('cities'))
async def command_cities(message: types.Message):
    cities = await db.select_users_city(message.from_user.id)
    await message.answer('–¢–≤–æ–∏ –≥–æ—Ä–æ–¥–∞: \n{}'.format("\n".join(cities)), reply_markup=cities_keyboard)


async def get(url):
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            return await response.json()


@dp.callback_query_handler(callback.filter(data='weather_in'))
async def callback_weather_in_cities(call: CallbackQuery, callback_data: dict):
    await call.answer(cache_time=60)
    cities = await db.select_users_city(call.from_user.id)
    for city in cities:
        url = f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={config.APPID}&units=metric'
        response = await get(url)
        try:
            description = response['weather'][0]['main']  # –ª–æ–≤–∏–º –æ—à–∏–±–∫—É –Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
        except KeyError:
            continue
        description_on_russian, emoji = translate(description)

        answer = f'''
                –ì–æ—Ä–æ–¥: <b>{city.title()}</b>
                –û–ø–∏—Å–∞–Ω–∏–µ: {emoji} {description_on_russian} {emoji}
                –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {response['main']['temp']} ¬∞C
                –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {response['wind']['speed']} –º/—Å
            '''
        await call.message.answer(answer)
